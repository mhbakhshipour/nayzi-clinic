# Generated by Django 3.0.6 on 2020-08-15 10:12

import authentication.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='VerificationCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile', models.CharField(max_length=255, verbose_name='mobile')),
                ('code', models.CharField(max_length=10, verbose_name='code')),
                ('issued_for', models.CharField(choices=[('REGISTER', 'REGISTER'), ('LOGIN', 'LOGIN'), ('FORGET_PASSWORD', 'FORGET_PASSWORD')], max_length=20, verbose_name='issued_for')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('confirmed_at', models.DateTimeField(blank=True, null=True, verbose_name='created_at')),
                ('expire_at', models.DateTimeField(default=authentication.models.calculate_expiration_date, verbose_name='expire_at')),
                ('revoked_at', models.DateTimeField(blank=True, null=True, verbose_name='revoked_at')),
            ],
            options={
                'verbose_name': 'verification_code',
                'verbose_name_plural': 'verification_codes',
                'db_table': 'verification_codes',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('mobile', models.CharField(max_length=20, unique=True, verbose_name='mobile')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='first_name')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='last_name')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='user_thumbnail', verbose_name='thumbnail')),
                ('email', models.CharField(blank=True, max_length=255, null=True, verbose_name='email')),
                ('national_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='national_code')),
                ('address', models.TextField(blank=True, null=True, verbose_name='address')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='birth_date')),
                ('file_number', models.IntegerField(blank=True, null=True, verbose_name='file_number')),
                ('customer_id', models.IntegerField(blank=True, null=True, verbose_name='customer_id')),
                ('gender', models.SmallIntegerField(choices=[(1, 'male'), (2, 'female')], default=1, verbose_name='gender')),
                ('verified_at', models.DateTimeField(blank=True, null=True, verbose_name='verified_at')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_registered_from_here', models.BooleanField(default=False, verbose_name='is_registered_from_here')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'users',
            },
            managers=[
                ('objects', authentication.models.UserManager()),
            ],
        ),
    ]
